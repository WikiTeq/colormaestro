from ..utils import color_conversion

def rgb_to_hex(rgb):
    """Convert RGB tuple to hex string"""
    return f"#{rgb[0]:02x}{rgb[1]:02x}{rgb[2]:02x}"

def generate(palette):
    """Generate SCSS variables from the color palette

    Args:
        palette (list): List of RGB color tuples

    Returns:
        str: SCSS variables definition
    """
    scss = "// Color Palette Generated by Color Palette Maestro\n\n"

    # Add color variables
    for i, color in enumerate(palette):
        hex_color = rgb_to_hex(color)
        var_name = ""

        if i == 0:
            var_name = "primary"
        elif i == 1:
            var_name = "secondary"
        elif i == 2:
            var_name = "accent"
        else:
            var_name = f"color-{i+1}"

        scss += f"${var_name}: {hex_color};\n"

        # Add RGB components as a Sass list
        scss += f"${var_name}-rgb: #{color[0]}, #{color[1]}, #{color[2]};\n"

    # Create a Sass map with all colors
    scss += "\n// Color map\n"
    scss += "$colors: (\n"

    for i, color in enumerate(palette):
        hex_color = rgb_to_hex(color)
        key_name = ""

        if i == 0:
            key_name = "primary"
        elif i == 1:
            key_name = "secondary"
        elif i == 2:
            key_name = "accent"
        else:
            key_name = f"color-{i+1}"

        comma = "," if i < len(palette) - 1 else ""
        scss += f"  '{key_name}': {hex_color}{comma}\n"

    scss += ");\n\n"

    # Add useful mixins
    scss += "// Function to get rgba from a color in the palette\n"
    scss += "@function rgba-palette($color, $opacity) {\n"
    scss += "  @if map-has-key($colors, $color) {\n"
    scss += "    $color-value: map-get($colors, $color);\n"
    scss += "    @return rgba($color-value, $opacity);\n"
    scss += "  }\n"
    scss += "  @warn \"Unknown color name: #{$color}\";\n"
    scss += "  @return null;\n"
    scss += "}\n\n"

    scss += "// Mixin for text color with contrast check\n"
    scss += "@mixin text-on-color($color-name) {\n"
    scss += "  background-color: map-get($colors, $color-name);\n"
    scss += "  color: if(lightness(map-get($colors, $color-name)) > 50, #000, #fff);\n"
    scss += "}\n"

    return scss
